name: Build and Deploy Web Service

on:
  push:
    branches:
      - main
    paths:
      - 'web/**'
      - 'Helmcharts/web/**'
  workflow_dispatch:

jobs:
  build:
    name: Build and Push Web Image
    runs-on: ubuntu-latest
    permissions:  
      id-token: write   # required for OIDC
      contents: read    # allow reading repo content

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2
      - name: Verify web folder exists
        run: |
          if [ ! -d "./web" ]; then
            echo "❌ ERROR: ./web folder not found. Check your repo structure."
            ls -R
            exit 1
          else
            echo "✅ ./web folder found, proceeding..."
          fi
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4️⃣ Build and push the image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/web:latest

      # - name: Build and Push Image
      #   run: |
      #      docker build -t $IMAGE ./web
          # IMAGE=${{ steps.login-ecr.outputs.registry }}/web:latest
          # docker build -t $IMAGE ./web
          # docker push $IMAGE

  # deploy:
  #   name: Deploy Web to EKS
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
  #         aws-region: us-east-1

  #     - name: Update kubeconfig
  #       run: |
  #         aws eks update-kubeconfig --name my-eks-cluster --region us-east-1

  #     - name: Deploy Helm Chart
  #       run: |
  #         helm upgrade web ./EKS/helm \
  #           --install \
  #           --namespace robot-shop \
  #           --create-namespace \
  #           --set image.repo=${{ steps.login-ecr.outputs.registry }} \
  #           --set image.version=latest
